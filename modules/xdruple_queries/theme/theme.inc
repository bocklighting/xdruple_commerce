<?php

/**
 * @keeps theme callback
 */

/**
 * Preprocess variables for products-page.tpl.php
 *
 * @param $variables
 *
 * @throws \Exception
 */
function template_preprocess_products_page(&$variables) {
  $products = $variables['products'];

  $column_size = 3;
  $column = array();
  foreach ($products as $i => $product) {
    $column[] = $product;
    if (($i + 1) % $column_size === 0) {
      $variables['columns'][] = $column;
      $column = array();
    }
  }
  if (!empty($column)) {
    $variables['columns'][] = $column;
    unset($column);
  }

  if (!empty($variables['category'])) {
    /** @var \Xtuple\XdrupleQueries\Categories\Category $category */
    $category = $variables['category'];
    if (!empty($category->getChildren())) {
      $cid = 'xtuple_xdcatalog-flat';
      $cache = cache_get($cid, 'cache');
      $entity_info = entity_get_info('xtuple_xdcatalog');

      if ((empty($cache) || xdruple_cache_expired($cache)) && !empty($entity_info)) {
        $query = new EntityFieldQuery();
        $count = $query->entityCondition('entity_type', 'xtuple_xdcatalog')
                       ->count()
                       ->execute();

        if ($count <= 100) {
          $xd_catalogs = entity_load('xtuple_xdcatalog');
        }
        else {
          // Paginate through all catalogs.
          $pages = ceil($count / 100);
          $xd_catalogs = array();

          $i = 0;
          while ($i < $pages) {
            $page_query = new EntityFieldQuery();
            $catalogs = $page_query->entityCondition('entity_type', 'xtuple_xdcatalog')
                                   ->range($i * 100, 100)
                                   ->propertyOrderBy('id', 'ASC')
                                   ->execute();

            $xd_catalogs = $xd_catalogs + $catalogs['xtuple_xdcatalog'];
            $i++;
          }
        }
        cache_set($cid, $xd_catalogs, 'cache', REQUEST_TIME + 60 * 60 * 1);
      }
      else {
        if (!$cache || empty($cache->data)) {
          $xd_catalogs = array();
        }
        else {
          $xd_catalogs = $cache->data;
        }
      }

      $subcategories = array();
      foreach ($category->getChildren() as $child) {
        if (!empty($xd_catalogs[$child->getId()])) {
          $subcategories[$child->getId()] = array(
            'data' => l($xd_catalogs[$child->getId()]->name, 'products/categories/' . $child->getId()),
            'class' => array('col-lg-4'),
          );
        }
      }
      if (!empty($subcategories)) {
        $variables['subcategories'] = theme('item_list', array(
          'items' => $subcategories,
          'attributes' => array('class' => array('row')),
        ));
      }
    }
  }
}

/**
 * Preprocess variables for products-page-item.tpl.php
 *
 * @param $variables
 */
function template_preprocess_products_page_item(&$variables) {
  $product = $variables['product'];
  $params = $variables['params'];

  $variables['id'] = $product->product_id;
  $variables['price'] = _xdruple_queries_price($product);

  $units = xdruple_fields_get_uom_list();
  $variables['unit'] = $units[$product->inventoryUnit];
  $variables['title'] = l($product->title, "products/{$product->product_id}");
  $variables['subtitle'] = $product->subTitle;
  $variables['img'] = _xdruple_queries_product_image($product, 'ft_commerce_product_thumb');

  if (!empty($params['fields']['add_to_cart'])) {
    $show_qty = FALSE;
    if (!empty($params['fields']['add_to_cart']['show_quantity'])) {
      $show_qty = $params['fields']['add_to_cart']['show_quantity'];
    }

    $qty = 1;
    if (isset($params['fields']['add_to_cart']['qty'])) {
      $qty = $params['fields']['add_to_cart']['qty'];
    }

    $order_id = 0;
    if (isset($params['fields']['add_to_cart']['order_id'])) {
      $order_id = $params['fields']['add_to_cart']['order_id'];
    }
    $variables['add_to_cart'] = _xdruple_queries_add_to_cart_button($product, $show_qty, array(), $qty, $order_id);
  }

  $variables['read_more'] = l('Read more', "products/$product->product_id", array(
    'attributes' => array(
      'class' => array('btn', 'btn-info'),
    ),
  ));
}
