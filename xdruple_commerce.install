<?php

/**
 * Implements hook_install()
 */
function xdruple_commerce_install() {
  // Call rescued_field_extra_fields() so all erp fields get created.
  // Then we set them up below.
  rescued_field_extra_fields();

  drupal_flush_all_caches();
  drupal_static_reset();

  if (!field_info_field('xd_customer')) {
    $field = array(
      'field_name' => 'xd_customer',
      'type' => 'entityreference',
      'cardinality' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'target_type' => 'xtuple_xdcustomerrelation',
        'handler' => 'efq_views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'xd_customer_list',
            'display_name' => 'entityreference_efq_views_1',
            'args' => array(),
          ),
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
            'reference-nkey' => array(
              'status' => 1,
            ),
          ),
        ),
      ),
      'field_permissions' => array(
        'type' => 2,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_customer_profile', 'xd_customer', 'billing', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_customer',
        'entity_type' => 'commerce_customer_profile',
        'bundle' => 'billing',
        'label' => 'Customer',
        'required' => TRUE,
        'widget' => array(
          'weight' => -30,
          'type' => 'options_select',
          'module' => 'options',
          'active' => 1,
          'settings' => array(),
        ),
        'settings' => array(
          'behaviors' => array(
            'prepopulate' => array(
              'status' => 1,
              'action' => 'disable',
              'action_on_edit' => 1,
              'fallback' => 'none',
              'skip_perm_add' => '0',
              'skip_perm_edit' => '0',
              'og_context' => 0,
            ),
          ),
          'user_register_form' => FALSE,
        ),
        'default_value' => NULL,
        'default_value_function' => 'entityreference_prepopulate_field_default_value',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'entityreference_label',
            'weight' => -30,
            'settings' => array(
              'link' => FALSE,
            ),
            'module' => 'entityreference',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_bill_to_contact')) {
    //$foo = field_info_field('xd_bill_to_contact');
    $field = array(
      'field_name' => 'xd_bill_to_contact',
      'type' => 'entityreference',
      'cardinality' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'target_type' => 'xtuple_xdcontact',
        'handler' => 'efq_views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'xd_contact_list',
            'display_name' => 'entityreference_efq_views_1',
            'args' => array(),
          ),
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
            'reference-nkey' => array(
              'status' => 1,
            ),
          ),
        ),
      ),
      'field_permissions' => array(
        'type' => 2,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_customer_profile', 'xd_bill_to_contact', 'billing', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_bill_to_contact',
        'entity_type' => 'commerce_customer_profile',
        'bundle' => 'billing',
        'label' => 'Bill To Contact',
        'required' => TRUE,
        'widget' => array(
          'weight' => -20,
          'type' => 'inline_entity_form_single',
          'module' => 'inline_entity_form',
          'active' => 1,
          'settings' => array(
            'fields' => array(),
            'type_settings' => array(
              'allow_existing' => TRUE,
              'match_operator' => 'CONTAINS',
              'existing_widget' => 'options_select',
              'delete_references' => 0,
              'existing_widget_settings' => array(
                'module' => 'options',
                'type' => 'options_select',
                'multiple_entities' => TRUE,
                'cardinality' => 1
              ),
            ),
            'match_operator' => 'CONTAINS',
          ),
        ),
        'settings' => array(
          'behaviors' => array(
            'prepopulate' => array(
              'status' => 1,
              'action' => 'disable',
              'action_on_edit' => 1,
              'fallback' => 'none',
              'skip_perm_add' => 'create checkout rescued entities',
              'skip_perm_edit' => '0',
              'og_context' => 0,
            ),
          ),
          'user_register_form' => FALSE,
        ),
        'default_value' => NULL,
        'default_value_function' => 'entityreference_prepopulate_field_default_value',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'entityreference_entity_view',
            'weight' => -20,
            'settings' => array(
              'view_mode' => '',
              'link' => FALSE,
            ),
            'module' => 'entityreference',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_bill_to_address')) {
    $field = array(
      'field_name' => 'xd_bill_to_address',
      'type' => 'entityreference',
      'cardinality' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'target_type' => 'xtuple_xdaddress',
        'handler' => 'efq_views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'xd_address_list',
            'display_name' => 'entityreference_efq_views_1',
            'args' => array(),
          ),
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
            'reference-nkey' => array(
              'status' => 1,
            ),
          ),
        ),
      ),
      'field_permissions' => array(
        'type' => 2,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_customer_profile', 'xd_bill_to_address', 'billing', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_bill_to_address',
        'entity_type' => 'commerce_customer_profile',
        'bundle' => 'billing',
        'label' => 'Bill To Address',
        'required' => TRUE,
        'widget' => array(
          'weight' => -10,
          'type' => 'inline_entity_form_single',
          'module' => 'inline_entity_form',
          'active' => 1,
          'settings' => array(
            'fields' => array(),
            'type_settings' => array(
              'allow_existing' => TRUE,
              'match_operator' => 'CONTAINS',
              'existing_widget' => 'options_select',
              'delete_references' => 0,
              'existing_widget_settings' => array(
                'module' => 'options',
                'type' => 'options_select',
                'multiple_entities' => TRUE,
                'cardinality' => 1
              ),
            ),
            'match_operator' => 'CONTAINS',
          ),
        ),
        'settings' => array(
          'behaviors' => array(
            'prepopulate' => array(
              'status' => 1,
              'action' => 'disable',
              'action_on_edit' => 1,
              'fallback' => 'none',
              'skip_perm_add' => 'create checkout rescued entities',
              'skip_perm_edit' => '0',
              'og_context' => 0,
            ),
          ),
          'user_register_form' => FALSE,
        ),
        'default_value' => NULL,
        'default_value_function' => 'entityreference_prepopulate_field_default_value',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'entityreference_entity_view',
            'weight' => -10,
            'settings' => array(
              'view_mode' => '',
              'link' => FALSE,
            ),
            'module' => 'entityreference',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_ship_to')) {
    $field = array(
      'field_name' => 'xd_ship_to',
      'type' => 'entityreference',
      'cardinality' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'target_type' => 'xtuple_xdshipto',
        'handler' => 'efq_views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'xd_ship_to_list',
            'display_name' => 'entityreference_efq_views_1',
            'args' => array(),
          ),
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
            'reference-nkey' => array(
              'status' => 1,
            ),
          ),
        ),
      ),
      'field_permissions' => array(
        'type' => 2,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_customer_profile', 'xd_ship_to', 'shipping', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_ship_to',
        'entity_type' => 'commerce_customer_profile',
        'bundle' => 'shipping',
        'label' => 'Ship To',
        'widget' => array(
          'weight' => -30,
          'type' => 'options_select',
          'module' => 'options',
          'active' => 1,
          'settings' => array(),
        ),
        'settings' => array(
          'behaviors' => array(
            'prepopulate' => array(
              'status' => 1,
              'action' => 'disable',
              'action_on_edit' => 0,
              'fallback' => 'none',
              'skip_perm_add' => 'create checkout rescued entities',
              'skip_perm_edit' => 'edit checkout rescued entities',
              'og_context' => 0,
            ),
          ),
          'user_register_form' => FALSE,
        ),
        'default_value' => NULL,
        'default_value_function' => 'entityreference_prepopulate_field_default_value',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'entityreference_entity_view',
            'weight' => -30,
            'settings' => array(
              'view_mode' => '',
              'link' => FALSE,
            ),
            'module' => 'entityreference',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_ship_to_contact')) {
    $field = array(
      'field_name' => 'xd_ship_to_contact',
      'type' => 'entityreference',
      'cardinality' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'target_type' => 'xtuple_xdcontact',
        'handler' => 'efq_views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'xd_contact_list',
            'display_name' => 'entityreference_efq_views_1',
            'args' => array(),
          ),
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
            'reference-nkey' => array(
              'status' => 1,
            ),
          ),
        ),
      ),
      'field_permissions' => array(
        'type' => 2,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_customer_profile', 'xd_ship_to_contact', 'shipping', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_ship_to_contact',
        'entity_type' => 'commerce_customer_profile',
        'bundle' => 'shipping',
        'label' => 'Ship To Contact',
        'widget' => array(
          'weight' => -20,
          'type' => 'inline_entity_form_single',
          'module' => 'inline_entity_form',
          'active' => 1,
          'settings' => array(
            'fields' => array(),
            'type_settings' => array(
              'allow_existing' => TRUE,
              'match_operator' => 'CONTAINS',
              'existing_widget' => 'options_select',
              'delete_references' => 0,
              'existing_widget_settings' => array(
                'module' => 'options',
                'type' => 'options_select',
                'multiple_entities' => TRUE,
                'cardinality' => 1
              ),
            ),
            'match_operator' => 'CONTAINS',
          ),
        ),
        'settings' => array(
          'behaviors' => array(
            'prepopulate' => array(
              'status' => 0,
            ),
          ),
          'user_register_form' => FALSE,
        ),
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'entityreference_entity_view',
            'weight' => -20,
            'settings' => array(
              'view_mode' => '',
              'link' => FALSE,
            ),
            'module' => 'entityreference',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_ship_to_address')) {
    $field = array(
      'field_name' => 'xd_ship_to_address',
      'type' => 'entityreference',
      'cardinality' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'target_type' => 'xtuple_xdaddress',
        'handler' => 'efq_views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'xd_address_list',
            'display_name' => 'entityreference_efq_views_1',
            'args' => array(),
          ),
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
            'reference-nkey' => array(
              'status' => 1,
            ),
          ),
        ),
      ),
      'field_permissions' => array(
        'type' => 2,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_customer_profile', 'xd_ship_to_address', 'shipping', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_ship_to_address',
        'entity_type' => 'commerce_customer_profile',
        'bundle' => 'shipping',
        'label' => 'Ship To Address',
        'widget' => array(
          'weight' => -10,
          'type' => 'inline_entity_form_single',
          'module' => 'inline_entity_form',
          'active' => 1,
          'settings' => array(
            'fields' => array(),
            'type_settings' => array(
              'allow_existing' => TRUE,
              'match_operator' => 'CONTAINS',
              'existing_widget' => 'options_select',
              'delete_references' => 0,
              'existing_widget_settings' => array(
                'module' => 'options',
                'type' => 'options_select',
                'multiple_entities' => TRUE,
                'cardinality' => 1
              ),
            ),
            'match_operator' => 'CONTAINS',
          ),
        ),
        'settings' => array(
          'behaviors' => array(
            'prepopulate' => array(
              'status' => 0,
            ),
          ),
          'user_register_form' => FALSE,
        ),
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'entityreference_entity_view',
            'weight' => -10,
            'settings' => array(
              'view_mode' => '',
              'link' => FALSE,
            ),
            'module' => 'entityreference',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_order_po_number')) {
    $field = array(
      'field_name' => 'xd_order_po_number',
      'type' => 'text',
      'cardinality' => 1,
      'module' => 'text',
      'field_permissions' => array(
        'type' => 0,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_order', 'xd_order_po_number', 'commerce_order', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_order_po_number',
        'entity_type' => 'commerce_order',
        'bundle' => 'commerce_order',
        'label' => 'PO Number',
        'widget' => array(
          'weight' => -5,
          'type' => 'text_textfield',
          'module' => 'text',
          'active' => 1,
          'settings' => array(
            'size' => 30,
          ),
        ),
        'settings' => array(
          'text_processing' => 0,
          'user_register_form' => FALSE,
        ),
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'text_default',
            'weight' => -5,
            'module' => 'text',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }

  if (!field_info_field('xd_order_notes')) {
    $field = array(
      'field_name' => 'xd_order_notes',
      'type' => 'text_with_summary',
      'cardinality' => 1,
      'module' => 'text',
      'field_permissions' => array(
        'type' => 0,
      ),
    );
    field_create_field($field);

    $instance = field_read_instance('commerce_order', 'xd_order_notes', 'commerce_order', array('include_inactive' => TRUE, 'include_deleted' => TRUE));
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'xd_order_notes',
        'entity_type' => 'commerce_order',
        'bundle' => 'commerce_order',
        'label' => 'Order Notes',
        'widget' => array(
          'weight' => -4,
          'type' => 'text_textarea_with_summary',
          'module' => 'text',
          'active' => 1,
          'settings' => array(
            'rows' => 3,
          ),
        ),
        'settings' => array(
          'display_summary' => 0,
          'text_processing' => 0,
          'user_register_form' => FALSE,
        ),
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'text_default',
            'weight' => -4,
            'module' => 'text',
          ),
        ),
      );
      field_create_instance($instance);
    }
  }
}

/**
 * Delete current Complete message (reset to new defaults)
 */
function xdruple_commerce_update_7001() {
  variable_del('commerce_checkout_completion_message');

  return t('commerce_checkout_completion_message variable deleted');
}

/**
 * Standard orders moved to its own module - xDruple Favorites
 */
function xdruple_commerce_update_7002() {
  $message = 'xDruple Favorites kept disabled';

  if ($enabled = variable_get('xdruple_queries_products_standard_page_enabled', FALSE)) {
    module_enable(array('xdruple_favorites'));
    $message = 'xDruple Favorites enabled';
  }

  variable_del('xdruple_queries_products_standard_page_enabled');

  return t($message);
}

/**
 * Recently ordered moved to its own module - xDruple Recent
 */
function xdruple_commerce_update_7003() {
  $message = 'xDruple Recent kept disabled';

  if ($enabled = variable_get('xdruple_queries_product_recent_page_enabled', FALSE)) {
    module_enable(array('xdruple_recent'));
    $message = 'xDruple Recent enabled';
  }

  variable_del('xdruple_queries_product_recent_page_enabled');

  return t($message);
}
